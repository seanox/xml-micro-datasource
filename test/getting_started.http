# The following test sequence tests the sequence of examples in
# getting-started.md.

###
CONNECT {{service}} HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "0169ece03d009a5cc4ae9648d5651eb7");
});
%}

###
OPTIONS {{service}} HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "0fe4413b2d00de48d69c7678f921a250");
});
%}

###
PUT {{service}}/table%5Bnot(guests)%5D::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<guests>
  <persons/>
  <conversation/>
</guests>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "72ce37e37c4b4cd29362a0e565dd264a");
});
%}

###
PUT {{service}}/table/guests/persons::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<person name="John Doe" mail="john.doe@example.local"/>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "5d97c9b892d075565f417dda2401d475");
});
%}

###
OPTIONS {{service}} HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "e26d03a513da23543fd96ef83d750bc7");
});
%}

###
PUT {{service}}/table%5Bnot(guests)%5D::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml
Content-Lenght: 49

<guests>
  <persons/>
  <conversation/>
</guests>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "2cbcae4dbb1c4344c22a524b1e3d3c60");
});
%}

###
PUT {{service}}/table/guests/persons::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<person name="Jane Doe" mail="jane.doe@example.local"/>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "7c2820a831e443d6910236a27161e32d");
});
%}

###
PUT {{service}}/table/guests/persons::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<person name="Mike Ross" mail="mike.ross@example.local"/>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "cf679d70fd1c25c5ed14ecbfc1100165");
});
%}

###
PUT {{service}}/table/guests/persons::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<person name="Dan Star" mail="dan.star@example.local"/>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "470a1d991f347b1d6eebf6723e29901e");
});
%}

###
OPTIONS {{service}} HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "86b12ddab95735dbb7aae4c3786b4add");
});
%}

###
GET  {{service}}count(/table/guests/persons/person)%3E1 HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "162a1b3a26aa2e3db234fc7d8fac3521");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="dan.star@example.local">
    Where do you come from?</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "309b25a094eea19fe038e07c88722762");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="john.doe@example.local">
    I'm from Hempstead and have a small bookstore.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "15adb048c78a8391b85129d2406f042e");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="jane.doe@example.local">
    I live in Long Island and have an antique store.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "e2e3798a50621ec3542ff79e5d5bbdd8");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="mike.ross@example.local">
    I live in Queens, work for a shipping company on a cargo ship.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "249aa5f184a4501bd002d9685e7cbc51");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="dan.star@example.local">
    I work and live in Yonkers as a gardener.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "faff0477f279610c7557f4e9ed3bd7fe");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="dan.star@example.local">
    In this beautiful weather I arrived with my scooter.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "d303318bf846d95bf062b59d45900b85");
});
%}

###
PUT {{service}}/table/guests/conversation::last HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<message from="dan.star@example.local">
    I like to look at the city.</message>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "dceb2d36bdaf7ea909e1d1591472309a");
});
%}

###
# - URI: //conversation/message[position()<=count(//conversation/message)-5]
DELETE {{service}}0x2f2f636f6e766572736174696f6e2f6d6573736167655b706f736974696f6e28293c3d636f756e74282f2f636f6e766572736174696f6e2f6d657373616765292d355d HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "3e7ff8dba2b0a9cb16d95832d3538ca4");
});
%}

###
# - URI: //message[@from='dan.star@example.local']
GET {{service}}0x2f2f6d6573736167655b4066726f6d3d2764616e2e73746172406578616d706c652e6c6f63616c275d HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "2f6d9d4c7013ebc27fbb0453070b8dc1");
});
%}

###
# - URI: //*/@mail|//*/@from
GET {{service}}0x2f2f2a2f406d61696c7c2f2f2a2f4066726f6d HTTP/1.0
Storage: {{storage_getting_started}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "0fd61acfa80391ead2368e4318a92b59");
});
%}

###
POST {{service}} HTTP/1.0
Storage: {{storage_getting_started}}
Content-Type: application/xslt+xml

<?xml version="1.0"?>
<xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="text"/>
  <xsl:template match="/">
    <xsl:for-each select="//persons/person">
Mame: <xsl:value-of select="@name"/>
Mail: <xsl:value-of select="@mail"/>
Messages:
      <xsl:variable name="mail" select="@mail"/>
      <xsl:choose>
        <xsl:when test="count(//message[@from=$mail]) &gt; 0">
          <xsl:for-each select="//message[@from=$mail]">
            <xsl:value-of select="."/>
          </xsl:for-each>
    ----
        </xsl:when>
        <xsl:otherwise>
    No messages
    ----
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Composite-Hash") === "dd1ff3d61fdfd96027ca96a4c392e5a0");
});
%}

###
